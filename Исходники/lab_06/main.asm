
EXTRN READ_OCTAL_UNSIGNED: NEAR
EXTRN PRINT_HEX_UNSIGNED: NEAR
EXTRN PRINT_BINARY_SIGNED: NEAR

STACK_SEG SEGMENT PARA STACK 'STACK'
    DB 100 DUP(0)
STACK_SEG ENDS

DATA_SEG SEGMENT PARA PUBLIC 'DATA'
    MENU_MSG DB 13, 10, 'Menu:', 13, 10
        DB '1. Read an unsigned octal number', 13, 10
        DB '2. Print an unsigned hexdecimal number', 13, 10
        DB '3. Print a signed binary number', 13, 10, 10
        DB '0. Exit', 13, 10, 10
        DB 'Choose an option: $'
    OPTIONS DW EXIT, READ_OCTAL_UNSIGNED, PRINT_HEX_UNSIGNED, PRINT_BINARY_SIGNED 
DATA_SEG ENDS


CODE_SEG SEGMENT PARA PUBLIC 'CODE'
    ASSUME CS:CODE_SEG, DS:DATA_SEG, SS:STACK_SEG

MENU_PRINT PROC NEAR
    MOV AH, 9
    MOV DX, OFFSET MENU_MSG
    INT 21H
    RET
MENU_PRINT ENDP

MENU_COMMAND PROC NEAR
    MOV AH, 1
    INT 21H
    SUB AL, '0'
    XOR AH, AH
    SHL AX, 1
    MOV SI, AX
    RET
MENU_COMMAND ENDP

EXIT PROC NEAR
    MOV AX, 4C00H
    INT 21H
EXIT ENDP

MAIN:
    MOV AX, DATA_SEG
    MOV DS, AX
    MENU:
        CALL MENU_PRINT
        CALL MENU_COMMAND
        CALL OPTIONS[SI]
        JMP MENU
CODE_SEG ENDS
END MAIN