.MODEL TINY
.CODE
.186

; CONST DEFINITIONS
TIMER_HANDLER EQU 1CH
REPEAT_MODE EQU 0F3H
SPEED_MIN EQU 00011111B
SPEED_MAX EQU 0H

SMALL_DELAY EQU 00000000B
NORMAL_DELAY EQU 00100000B
BIG_DELAY EQU 01000000B
ENORMOUS_DELAY EQU 01100000B

ORG 100H

MAIN:
    JMP INIT

LOAD_FLAG DB 0
OLD_1CH_HANDLER DD ?
CURRENT_SPEED DB SPEED_MIN
CURRENT_TIME DB 0H

MY_1CH_HANDLER PROC FAR
    ; SAVE CURRENT STATE
    PUSHF
    PUSHA

    ; GET NEW CMOS-TIME
    MOV AH, 02H
    INT 1AH
    JC HANDLER_END ;  CMOS-TIME ERROR

    ; CHECK TIME
    CMP CURRENT_TIME, DH
    JE HANDLER_END
    MOV CURRENT_TIME, DH

    DEC CURRENT_SPEED

    ; SET MODE
    MOV AL, REPEAT_MODE
    OUT 60H, AL

    ; SET DELAY
    MOV AL, NORMAL_DELAY

    ; BOUND DELAY AND SPEED
    OR AL, CURRENT_SPEED

    ; SET REPEAT SPEED
    OUT 60H, AL

    ; SPEED RESET
    CMP CURRENT_SPEED, SPEED_MAX
    JNE HANDLER_END
    MOV CURRENT_SPEED, SPEED_MIN

HANDLER_END:
    ; RESTORE INITIAL STATE
    POPA
    POPF

    ; RETURN CONTROL TO STDHANDLER
    JMP CS:OLD_1CH_HANDLER

MY_1CH_HANDLER ENDP

INIT PROC 
    ; GET OLD_1CH_HANDLER ADDRESS
    MOV AH, 35H
    MOV AL, TIMER_HANDLER
    INT 21H

    ; SAVE OLD_1CH_HANDLER ADDRESS
    MOV WORD PTR OLD_1CH_HANDLER, BX
    MOV WORD PTR OLD_1CH_HANDLER + 2, ES

    CMP ES:LOAD_FLAG, 1
    JE RESET
    JNE SET
SET:
    MOV LOAD_FLAG, 1
    ; SET MY_1CH_HANDLER
    MOV AH, 25H
    MOV AL, TIMER_HANDLER
    MOV DX, OFFSET MY_1CH_HANDLER
    INT 21H

    ; TERMINATE AND STAY RESIDENT
    MOV DX, OFFSET INIT
    INT 27H
RESET:
    ; RESET 1CH_HANDLER
    MOV AH, 25H
    MOV AL, TIMER_HANDLER
    MOV DX, WORD PTR ES:OLD_1CH_HANDLER
    MOV DS, WORD PTR ES:OLD_1CH_HANDLER + 2
    INT 21H

    ; RESET 60H PORT
    MOV LOAD_FLAG, 0
    MOV AL, REPEAT_MODE
    OUT 60H, AL
    MOV AL, SMALL_DELAY
    OR AL, SPEED_MAX
    OUT 60H, AL

    MOV AH, 4CH
    INT 21H
INIT ENDP
END MAIN